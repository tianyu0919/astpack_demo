(function(modules){
  const entry = "<%= entry %>" // * 找到入口文件

  /**
   * @param {string} path
   * @returns {object}
   * @description 根据入口文件路径拿到对应的模块
   */
  function require(path) {
    const [moduleFunction, dependencies] = modules[path]; // * 在传进来的modules中，根据入口文件路径拿到对一个主模块的[方法, 依赖项]
    const module = { exports: { } } // * 创建一个模块的全局变量，后续将传递给每个模块的方法中。

    /**
     * @param {string} depsPath
     * @description 拿到模块的依赖项，并赋值给module.exports
     */
    function localRequire(depsPath) {
      const modulePath = dependencies[depsPath];
      return require(modulePath);
    }

    /**
     * @param {object} localRequire
     * @param {object} module.exports
     * @description 将模块的方法赋值给module.exports
     */
    moduleFunction(localRequire, module.exports);
    return module.exports;
  }

  require(entry);
})({
<% Object.keys(modules).forEach(key => { %>
    "<%= key %>": [(require, exports) => { 
      <%- modules[key].code %>
    }, 
    <%- JSON.stringify(modules[key].deps) %>],
<% }) %>
})